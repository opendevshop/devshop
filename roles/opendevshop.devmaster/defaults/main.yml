---

# Server hostname will default to this unless overridden in your inventory or extra_vars.
# It is overridden in devshop's install.sh file to match the server's current hostname.
# server_hostname: devshop.local.computer

server_hostname_ignore_errors: true
devshop_devmaster_email: admin@devshop.local.computer

# Get a GitHub Token from 'https://github.com/settings/tokens/new?scopes=repo,admin:public_key,admin:repo_hook&description=devshop-ansible-token
devshop_github_token: ''

# Set PHP Version:
# DevShop uses geerlingguy.php-versions to handle PHP Version.
# See README.md for variable details: https://github.com/geerlingguy/ansible-role-php-versions#role-variables
php_version: '7.2'

devshop_cli_repo: http://github.com/opendevshop/devshop.git
devshop_cli_skip_update: false
devshop_cli_path: /usr/share/devshop
devshop_cli_bin_path: "{{ devshop_cli_path }}/bin"
devshop_cli_composer_install_command: "install"

drush_bin_path: "{{ devshop_cli_bin_path }}/drush"

aegir_server_webserver: apache
mysql_root_password_update: false

database_host: localhost
database_host_port: 3306
aegir_client_name: admin
aegir_logs_path: /var/log/aegir

hosting_queue_runner_log_path: "{{ aegir_logs_path }}/hosting-queue-runner.log"

# These files are created if they don't exist.
# Useful when using the Docker containers and customizing DEVSHOP_ENTRYPOINT_LOG_FILES
aegir_log_files_touch:
  - "{{ hosting_queue_runner_log_path }}"
  - "{{ aegir_logs_path }}/hostmaster.error.log"
  - "{{ aegir_logs_path }}/hostmaster.access.log"

drush_dl_method: git_drupalorg

devshop_drush_packages:
  registry_rebuild: 7.x-2.2

php_date_timezone: "America/New_York"

# You should specify your own random mysql_root_password in your own playbooks or inventory.
# mysql_root_password: PleaseRandomizeOnPlaybookRun

# The version of devshop & devmaster to install.
# Overridden by install.sh
devshop_version: 1.x
devshop_cli_version: "{{ devshop_version }}"

# Set devshop_control_git_remote to deploy a devmaster instance from an existing git repo.
# The devshop_control_git_reference will be checked out on provision verify. Leave blank to use default branch.
devshop_control_git_remote: "https://github.com/devshop-packages/devshop-control-template"
devshop_control_git_reference: ""
devshop_control_git_docroot: "web"
devshop_control_path: "{{ aegir_user_home }}/devshop-control"
devshop_control_drush_alias: "@hostmaster"
devshop_control_install_options: ""

devshop_install_profile: devmaster

# The command used to install the control site.
# @TODO: Ensure automatically detected server_hostname is properly propagated to the devmaster install command.
devmaster_install_command: "{{ devshop_cli_bin_path }}/devshop devmaster:install -n \
                                --site={{ server_hostname }} \
                                --aegir_db_host={{ database_host }} \
                                --aegir_db_pass={{ mysql_root_password }} \
                                --aegir_db_user={{ mysql_root_username }} \
                                --aegir_db_port={{ database_host_port }} \
                                --aegir_host={{ server_hostname }} \
                                --client_name={{ aegir_client_name }} \
                                --client_email={{ devshop_devmaster_email }} \
                                --http_service_type={{ aegir_server_webserver }} \
                                --profile={{ devshop_install_profile }} \
                                --root={{ devshop_control_path }}/{{ devshop_control_git_docroot }} \
                                --devshop_version={{ devshop_version }} \
                                --drush-path={{ devshop_cli_bin_path }}/drush \
                                --git_root={{ devshop_control_path }} \
                                --git_remote={{ devshop_control_git_remote }} \
                                --git_reference={{ devshop_control_git_reference }}
                                --git_docroot={{ devshop_control_git_docroot }}
                                {{ devshop_control_install_options }}
"

devmaster_upgrade_command: |
  {{ devshop_cli_bin_path }}/devshop devmaster:upgrade {{ devshop_version }} -n --run-from-playbooks

devmaster_test_command: "{{ devshop_cli_path }}/tests/devshop-tests.sh"

# Set to true to skip the devmaster install process.
devmaster_skip_install: false

# Set to true if you want to skip the "devmaster" upgrade process during the "devshop upgrade" command.
devmaster_skip_upgrade: false

# If your system does not allow root user in "sudo" group, change this to "su"
ansible_become_method_aegir: sudo
ansible_share_path: /usr/share/ansible

# Server Options

# Get a support license at https://devshop.support
devshop_support_license_key: ""

# The path to the script to use for the Hosting Task Queue Runner. See opendevshop/devshop/bin/hosting-queue-runner
hosting_queue_runner_bin_path: "{{ devshop_cli_bin_path }}/hosting-queue-runner"

# Triggers the removal of devshop_control_path: `rm -rf {{ devshop_control_path }}`
devshop_danger_remove_devmaster: false

# By default, devshop assumes it is being installed at "runtime" (like on a running server).
# In the Dockerfile, "devshop_install_phase: buildtime" ansible vars is set.
# If building other kinds of server images, where data won't be installed yet, use this variable.
devshop_install_phase: runtime

devshop_pip_packages:
  - mysqlclient
