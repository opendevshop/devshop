---
- name: "Create default projects"
  include_tasks: "config-projects.yml"
  tags: [install-devmaster, create-projects]

- name: DevShop Control | Clear drush caches
  command: "{{ drush_executable_path }} cc drush"
  become: true
  become_user: "{{ aegir_user_name }}"
  become_method: "{{ ansible_become_method_aegir }}"
  register: drush_cache_clear
  changed_when: drush_cache_clear.stdout | length > 0

- name: DevShop Control | Clear all caches
  command: "{{ drush_executable_path }} {{ devshop_control_drush_alias }} cc all"
  become: true
  become_user: "{{ aegir_user_name }}"
  become_method: "{{ ansible_become_method_aegir }}"
  register: drush_cache_clear
  changed_when: drush_cache_clear.stdout | length > 0

- name: DevShop Control | Save GitHub Token
  become: true
  become_user: "{{ aegir_user_name }}"
  become_method: "{{ ansible_become_method_aegir }}"
  command: "{{ drush_executable_path }} {{ devshop_control_drush_alias }} vset devshop_github_token {{ devshop_github_token }}"
  when:
    - devshop_github_token is defined
    - devshop_github_token | length > 0
  # @TODO: The "when" condition is not getting picked up, so let's ignore errors here for now. See #422.
  ignore_errors: true

- name: DevShop Control | Run all outstanding tasks
  become: true
  become_user: "{{ aegir_user_name }}"
  become_method: "{{ ansible_become_method_aegir }}"
  command: "{{ drush_executable_path }} {{ devshop_control_drush_alias }} hosting-tasks --force"
  register: devshop_ansible_command_output
  changed_when: devshop_ansible_command_output.stdout | length > 0

- name: Ensure hosting-dispatch crontab is setup
  become: true
  become_user: "{{ aegir_user_name }}"
  become_method: "{{ ansible_become_method_aegir }}"
  command: "{{ drush_executable_path }} {{ devshop_control_drush_alias }} hosting-setup -y"
  register: devshop_ansible_command_output
  changed_when: devshop_ansible_command_output.stdout | length > 0

- name: Ensure Supervisor is started after install (if configured).
  service:
    name: supervisord
    state: started
  when: supervisor_started

- name: DevShop.Support | Save License Key
  become: true
  become_user: "{{ aegir_user_name }}"
  become_method: "{{ ansible_become_method_aegir }}"
  command: "{{ drush_executable_path }} {{ devshop_control_drush_alias }} vset devshop_support_license_key {{ devshop_support_license_key }}"
  when: devshop_support_license_key | length > 0

- name: DevShop.Support | Validate License Key to setup support modules.
  become: true
  become_user: "{{ aegir_user_name }}"
  become_method: "{{ ansible_become_method_aegir }}"
  command: "{{ drush_executable_path }} {{ devshop_control_drush_alias }} hosting-devshop_support"
  when: devshop_support_license_key | length > 0

- name: Save SSH key as variable
  shell: "{{ drush_executable_path }} {{ devshop_control_drush_alias }} vset devshop_public_key \"$(cat ~/.ssh/id_rsa.pub)\" --yes"
  become: true
  become_user: aegir
  become_method: "{{ ansible_become_method_aegir }}"
  register: devshop_ansible_command_output
  changed_when: devshop_ansible_command_output.stdout | length > 0

- name: Set git user name
  git_config:
    name: user.name
    scope: global
    value: aegir_client_name
  become: true
  become_user: "{{ aegir_user_name }}"
  become_method: "{{ ansible_become_method_aegir }}"

- name: Set git user email
  git_config:
    name: user.email
    scope: global
    value: devshop_devmaster_email
  become: true
  become_user: "{{ aegir_user_name }}"
  become_method: "{{ ansible_become_method_aegir }}"

- name: Set git config push.default simple
  git_config:
    name: push.default
    scope: global
    value: simple
  become: true
  become_user: "{{ aegir_user_name }}"
  become_method: "{{ ansible_become_method_aegir }}"

- name: Verify DevShop Control site
  command: "{{ drush_executable_path }} {{ devshop_control_drush_alias }} provision-verify"
  become: true
  become_user: "{{ aegir_user_name }}"
  become_method: "{{ ansible_become_method_aegir }}"
